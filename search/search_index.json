{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation 1.1 Governing Equations of Motion Projectile motion is governed by Newton's Second Law of Motion, which states: \\[\\mathbf{F}=m\\mathbf{a}\\] For a projectile launched with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) , we decompose the motion into horizontal and vertical components: Horizontal Motion \\[x(t)=v_0\\cos\\theta\\cdot t\\] Since there is no horizontal acceleration (assuming no air resistance), the horizontal velocity remains constant: \\[v_x=v_0\\cos\\theta\\] Vertical Motion The vertical motion is influenced by gravity \\(g\\) , and follows the kinematic equations: \\[y(t)=v_0\\sin\\theta\\cdot t-\\frac{1}{2}gt^2\\] The vertical velocity is given by: \\[v_y=v_0\\sin\\theta-gt\\] At the peak of the trajectory, the vertical velocity becomes zero: \\[0=v_0\\sin\\theta-gt_{max}\\] Solving for \\(t_{max}\\) : \\[t_{max}=\\frac{v_0\\sin\\theta}{g}\\] The total time of flight is twice this value: \\[T=\\frac{2v_0\\sin\\theta}{g}\\] 1.2 Derivation of the Range Equation The range \\(R\\) is the horizontal distance traveled when \\(y=0\\) . Using the horizontal motion equation: \\[R=v_xT\\] Substituting \\(v_x=v_0\\cos\\theta\\) and \\(T=\\frac{2v_0\\sin\\theta}{g}\\) : \\[R=v_0\\cos\\theta\\cdot\\frac{2v_0\\sin\\theta}{g}\\] Using the trigonometric identity \\(2\\sin\\theta\\cos\\theta=\\sin2\\theta\\) , we obtain: \\[R=\\frac{v_0^2\\sin2\\theta}{g}\\] 1.3 Influence of Initial Conditions Initial Velocity ( \\(v_0\\) ) : Increasing \\(v_0\\) increases \\(R\\) quadratically. Angle of Projection ( \\(\\theta\\) ) : Maximum range occurs at \\(\\theta=45^\\circ\\) . Gravitational Acceleration ( \\(g\\) ) : A higher \\(g\\) decreases the range. Launch Height ( \\(h\\) ) : If launched from a height \\(h\\) , the total flight time increases, affecting \\(R\\) . Modified Range Equation for Nonzero Initial Height If the projectile is launched from height \\(h\\) , the quadratic equation for time of flight is: \\[y=v_0\\sin\\theta\\cdot t-\\frac{1}{2}gt^2+h=0\\] Solving for \\(t\\) , we get: \\[t=\\frac{v_0\\sin\\theta+\\sqrt{(v_0\\sin\\theta)^2+2gh}}{g}\\] The range then becomes: \\[R=v_0\\cos\\theta\\cdot\\left(\\frac{v_0\\sin\\theta+\\sqrt{(v_0\\sin\\theta)^2+2gh}}{g}\\right)\\] This equation accounts for different launch heights, making it more general. 2. Analysis of the Range 2.1 Dependence on the Angle of Projection The horizontal range \\(R\\) depends on the angle of projection \\(\\theta\\) as: \\[R=\\frac{v_0^2\\sin2\\theta}{g}\\] This function is symmetric about \\(45^\\circ\\) , meaning that complementary angles ( \\(\\theta\\) and \\(90^\\circ - \\theta\\) ) result in the same range. The maximum range occurs when: \\[\\theta=45^\\circ\\] At this angle, the sine function reaches its maximum value of 1, giving: \\[R_{max}=\\frac{v_0^2}{g}\\] 2.2 Influence of Initial Velocity From the range equation: \\[R \\propto v_0^2\\] This quadratic relationship implies that doubling the initial velocity results in a fourfold increase in range. 2.3 Influence of Gravitational Acceleration Since: \\[R \\propto \\frac{1}{g}\\] A higher gravitational acceleration reduces the range, which explains why projectiles on the Moon (where \\(g\\) is lower) travel much farther than on Earth. 3. Practical Applications 3.1 Introduction In this section, we explore real-world applications of projectile motion, considering various factors such as uneven terrain and air resistance. These cases require advanced mathematical models beyond the idealized equations of motion. 3.2 Projectile Motion on Uneven Terrain When a projectile is launched over an uneven surface, its trajectory is influenced by the varying height of the ground. The general equations of motion in the presence of gravity are given by: \\[ x=v_0\\cos(\\theta)t \\] \\[ y=v_0\\sin(\\theta)t-\\frac{1}{2}gt^2 \\] However, when the ground is not flat but follows a function \\(h(x)\\) , we must solve for the intersection: \\[ v_0\\sin(\\theta)t-\\frac{1}{2}gt^2=h(v_0\\cos(\\theta)t) \\] This requires numerical or analytical techniques depending on the complexity of \\(h(x)\\) . 3.3 Air Resistance in Projectile Motion In realistic scenarios, air resistance significantly affects the projectile's motion. The drag force \\(F_d\\) is modeled as: \\[ F_d=\\frac{1}{2}C_d\\rho A v^2 \\] where: - \\(C_d\\) is the drag coefficient, - \\(\\rho\\) is the air density, - \\(A\\) is the cross-sectional area, - \\(v\\) is the velocity of the projectile. The motion equations with drag become: \\[ m\\frac{dv_x}{dt}=-\\frac{1}{2}C_d\\rho A v v_x \\] \\[ m\\frac{dv_y}{dt}=-mg-\\frac{1}{2}C_d\\rho A v v_y \\] These equations are coupled and typically require numerical integration techniques such as the Runge-Kutta method. 3.4 Computational Approaches To analyze projectile motion with air resistance or uneven terrain, computational methods are often used. The numerical solution can be obtained using Python or MATLAB, employing: Euler\u2019s method Runge-Kutta methods Finite difference approaches These allow us to approximate the trajectory efficiently. 3.5 Conclusion Practical projectile motion problems require considering additional forces and irregular surfaces. Understanding these factors is crucial in fields like aerospace engineering, ballistics, and sports science. The combination of analytical and computational approaches provides deeper insights into real-world projectile dynamics. 4. python/ plot import numpy as np import matplotlib.pyplot as plt def projectile_range(v0, angle, g=9.81): \"\"\" Compute the range of a projectile given initial velocity and launch angle. :param v0: Initial velocity (m/s) :param angle: Launch angle (degrees) :param g: Acceleration due to gravity (m/s^2), default is Earth gravity :return: Range of the projectile (m) \"\"\" theta = np.radians(angle) return (v0**2 * np.sin(2 * theta)) / g def plot_range(v0, g=9.81): \"\"\" Plot range as a function of launch angle. \"\"\" angles = np.linspace(0, 90, num=100) # Angles from 0 to 90 degrees ranges = [projectile_range(v0, angle, g) for angle in angles] plt.figure(figsize=(10, 5)) plt.plot(angles, ranges, label=f'Initial Velocity = {v0} m/s') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Launch Angle') plt.legend() plt.grid() plt.show() # Parameters v0 = 20 # Initial velocity in m/s # Run simulation plot_range(v0)","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-governing-equations-of-motion","text":"Projectile motion is governed by Newton's Second Law of Motion, which states: \\[\\mathbf{F}=m\\mathbf{a}\\] For a projectile launched with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) , we decompose the motion into horizontal and vertical components:","title":"1.1 Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#horizontal-motion","text":"\\[x(t)=v_0\\cos\\theta\\cdot t\\] Since there is no horizontal acceleration (assuming no air resistance), the horizontal velocity remains constant: \\[v_x=v_0\\cos\\theta\\]","title":"Horizontal Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#vertical-motion","text":"The vertical motion is influenced by gravity \\(g\\) , and follows the kinematic equations: \\[y(t)=v_0\\sin\\theta\\cdot t-\\frac{1}{2}gt^2\\] The vertical velocity is given by: \\[v_y=v_0\\sin\\theta-gt\\] At the peak of the trajectory, the vertical velocity becomes zero: \\[0=v_0\\sin\\theta-gt_{max}\\] Solving for \\(t_{max}\\) : \\[t_{max}=\\frac{v_0\\sin\\theta}{g}\\] The total time of flight is twice this value: \\[T=\\frac{2v_0\\sin\\theta}{g}\\]","title":"Vertical Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-derivation-of-the-range-equation","text":"The range \\(R\\) is the horizontal distance traveled when \\(y=0\\) . Using the horizontal motion equation: \\[R=v_xT\\] Substituting \\(v_x=v_0\\cos\\theta\\) and \\(T=\\frac{2v_0\\sin\\theta}{g}\\) : \\[R=v_0\\cos\\theta\\cdot\\frac{2v_0\\sin\\theta}{g}\\] Using the trigonometric identity \\(2\\sin\\theta\\cos\\theta=\\sin2\\theta\\) , we obtain: \\[R=\\frac{v_0^2\\sin2\\theta}{g}\\]","title":"1.2 Derivation of the Range Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#13-influence-of-initial-conditions","text":"Initial Velocity ( \\(v_0\\) ) : Increasing \\(v_0\\) increases \\(R\\) quadratically. Angle of Projection ( \\(\\theta\\) ) : Maximum range occurs at \\(\\theta=45^\\circ\\) . Gravitational Acceleration ( \\(g\\) ) : A higher \\(g\\) decreases the range. Launch Height ( \\(h\\) ) : If launched from a height \\(h\\) , the total flight time increases, affecting \\(R\\) .","title":"1.3 Influence of Initial Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#modified-range-equation-for-nonzero-initial-height","text":"If the projectile is launched from height \\(h\\) , the quadratic equation for time of flight is: \\[y=v_0\\sin\\theta\\cdot t-\\frac{1}{2}gt^2+h=0\\] Solving for \\(t\\) , we get: \\[t=\\frac{v_0\\sin\\theta+\\sqrt{(v_0\\sin\\theta)^2+2gh}}{g}\\] The range then becomes: \\[R=v_0\\cos\\theta\\cdot\\left(\\frac{v_0\\sin\\theta+\\sqrt{(v_0\\sin\\theta)^2+2gh}}{g}\\right)\\] This equation accounts for different launch heights, making it more general.","title":"Modified Range Equation for Nonzero Initial Height"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-dependence-on-the-angle-of-projection","text":"The horizontal range \\(R\\) depends on the angle of projection \\(\\theta\\) as: \\[R=\\frac{v_0^2\\sin2\\theta}{g}\\] This function is symmetric about \\(45^\\circ\\) , meaning that complementary angles ( \\(\\theta\\) and \\(90^\\circ - \\theta\\) ) result in the same range. The maximum range occurs when: \\[\\theta=45^\\circ\\] At this angle, the sine function reaches its maximum value of 1, giving: \\[R_{max}=\\frac{v_0^2}{g}\\]","title":"2.1 Dependence on the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-influence-of-initial-velocity","text":"From the range equation: \\[R \\propto v_0^2\\] This quadratic relationship implies that doubling the initial velocity results in a fourfold increase in range.","title":"2.2 Influence of Initial Velocity"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#23-influence-of-gravitational-acceleration","text":"Since: \\[R \\propto \\frac{1}{g}\\] A higher gravitational acceleration reduces the range, which explains why projectiles on the Moon (where \\(g\\) is lower) travel much farther than on Earth.","title":"2.3 Influence of Gravitational Acceleration"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#31-introduction","text":"In this section, we explore real-world applications of projectile motion, considering various factors such as uneven terrain and air resistance. These cases require advanced mathematical models beyond the idealized equations of motion.","title":"3.1 Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#32-projectile-motion-on-uneven-terrain","text":"When a projectile is launched over an uneven surface, its trajectory is influenced by the varying height of the ground. The general equations of motion in the presence of gravity are given by: \\[ x=v_0\\cos(\\theta)t \\] \\[ y=v_0\\sin(\\theta)t-\\frac{1}{2}gt^2 \\] However, when the ground is not flat but follows a function \\(h(x)\\) , we must solve for the intersection: \\[ v_0\\sin(\\theta)t-\\frac{1}{2}gt^2=h(v_0\\cos(\\theta)t) \\] This requires numerical or analytical techniques depending on the complexity of \\(h(x)\\) .","title":"3.2 Projectile Motion on Uneven Terrain"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#33-air-resistance-in-projectile-motion","text":"In realistic scenarios, air resistance significantly affects the projectile's motion. The drag force \\(F_d\\) is modeled as: \\[ F_d=\\frac{1}{2}C_d\\rho A v^2 \\] where: - \\(C_d\\) is the drag coefficient, - \\(\\rho\\) is the air density, - \\(A\\) is the cross-sectional area, - \\(v\\) is the velocity of the projectile. The motion equations with drag become: \\[ m\\frac{dv_x}{dt}=-\\frac{1}{2}C_d\\rho A v v_x \\] \\[ m\\frac{dv_y}{dt}=-mg-\\frac{1}{2}C_d\\rho A v v_y \\] These equations are coupled and typically require numerical integration techniques such as the Runge-Kutta method.","title":"3.3 Air Resistance in Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#34-computational-approaches","text":"To analyze projectile motion with air resistance or uneven terrain, computational methods are often used. The numerical solution can be obtained using Python or MATLAB, employing: Euler\u2019s method Runge-Kutta methods Finite difference approaches These allow us to approximate the trajectory efficiently.","title":"3.4 Computational Approaches"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#35-conclusion","text":"Practical projectile motion problems require considering additional forces and irregular surfaces. Understanding these factors is crucial in fields like aerospace engineering, ballistics, and sports science. The combination of analytical and computational approaches provides deeper insights into real-world projectile dynamics.","title":"3.5 Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-python-plot","text":"import numpy as np import matplotlib.pyplot as plt def projectile_range(v0, angle, g=9.81): \"\"\" Compute the range of a projectile given initial velocity and launch angle. :param v0: Initial velocity (m/s) :param angle: Launch angle (degrees) :param g: Acceleration due to gravity (m/s^2), default is Earth gravity :return: Range of the projectile (m) \"\"\" theta = np.radians(angle) return (v0**2 * np.sin(2 * theta)) / g def plot_range(v0, g=9.81): \"\"\" Plot range as a function of launch angle. \"\"\" angles = np.linspace(0, 90, num=100) # Angles from 0 to 90 degrees ranges = [projectile_range(v0, angle, g) for angle in angles] plt.figure(figsize=(10, 5)) plt.plot(angles, ranges, label=f'Initial Velocity = {v0} m/s') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Launch Angle') plt.legend() plt.grid() plt.show() # Parameters v0 = 20 # Initial velocity in m/s # Run simulation plot_range(v0)","title":"4. python/ plot"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Investigating the Dynamics of a Forced Damped Pendulum 1. Theoretical Foundation 1.1 Governing Equation The motion of a forced damped pendulum is described by the second-order nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = F_0 \\cos(\\omega t), \\] where: - \\(\\theta\\) is the angular displacement, - \\(\\gamma\\) is the damping coefficient, - \\(\\omega_0 = \\sqrt{g/L}\\) is the natural frequency of the pendulum, - \\(F_0\\) is the amplitude of the external periodic forcing, - \\(\\omega\\) is the driving frequency, - \\(g\\) is the acceleration due to gravity, - \\(L\\) is the length of the pendulum. 1.2 Approximate Solutions for Small-Angle Oscillations For small angles ( \\(\\theta \\approx 0\\) ), we use the small-angle approximation: \\[ \\sin\\theta \\approx \\theta. \\] This simplifies the governing equation to a linear form: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = F_0 \\cos(\\omega t). \\] This is a damped, driven harmonic oscillator equation, which can be solved using standard techniques. Homogeneous Solution (Natural Response) The homogeneous equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = 0 \\] has a general solution of the form: \\[ \\theta_h (t) = e^{-\\frac{\\gamma}{2}t} \\left( C_1 \\cos(\\Omega t) + C_2 \\sin(\\Omega t) \\right), \\] where: \\[ \\Omega = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{4}} \\] is the damped frequency of oscillation. Particular Solution (Steady-State Response) For the forcing term \\(F_0 \\cos(\\omega t)\\) , we assume a solution of the form: \\[ \\theta_p (t) = A \\cos(\\omega t - \\delta). \\] Substituting into the equation and solving for \\(A\\) and \\(\\delta\\) , we obtain: \\[ A = \\frac{F_0}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + \\gamma^2 \\omega^2}}, \\] \\[ \\tan\\delta = \\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2}. \\] Thus, the total solution is: \\[ \\theta (t) = e^{-\\frac{\\gamma}{2}t} \\left( C_1 \\cos(\\Omega t) + C_2 \\sin(\\Omega t) \\right) + A \\cos(\\omega t - \\delta). \\] 1.3 Resonance Conditions and Energy Implications Resonance occurs when the driving frequency \\(\\omega\\) is close to the natural frequency \\(\\omega_0\\) . In the absence of damping ( \\(\\gamma = 0\\) ), the amplitude becomes: \\[ A = \\frac{F_0}{|\\omega_0^2 - \\omega^2|}. \\] For \\(\\omega \\approx \\omega_0\\) , the amplitude becomes very large, indicating resonance. In the presence of damping, the peak amplitude occurs at a slightly shifted frequency given by: \\[ \\omega_r = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{2}}. \\] The energy of the system is given by: \\[ E = \\frac{1}{2} I \\dot{\\theta}^2 + mgL(1 - \\cos\\theta), \\] where \\(I = mL^2\\) is the moment of inertia. In steady-state oscillations, energy is continuously supplied by the external force to compensate for the energy lost due to damping, resulting in a balance where the average energy remains constant. This section provides the theoretical groundwork necessary to analyze the forced damped pendulum. Further analysis will involve numerical simulations and visualization techniques to explore the full dynamical behavior, including chaos and bifurcations. Analysis of Dynamics 1. Introduction In this section, we analyze the effects of key parameters on the motion of a dynamical system. We focus on the damping coefficient \\(\\gamma\\) , driving amplitude \\(F_0\\) , and driving frequency \\(\\omega\\) . The study involves examining regular and chaotic motion and interpreting their physical significance. 2. Governing Equations The general equation of motion for a driven, damped system is given by: \\[m\\ddot{x} + \\gamma \\dot{x} + kx = F_0 \\cos(\\omega t)\\] where: - \\(m\\) is the mass, - \\(\\gamma\\) is the damping coefficient, - \\(k\\) is the stiffness of the system, - \\(F_0\\) is the driving amplitude, - \\(\\omega\\) is the driving frequency. Rewriting in dimensionless form using \\(\\tau = \\omega_0 t\\) (where \\(\\omega_0 = \\sqrt{k/m}\\) is the natural frequency): \\[\\ddot{X} + 2\\zeta \\dot{X} + X = A \\cos(\\Omega \\tau)\\] where: - \\(\\zeta = \\frac{\\gamma}{2m\\omega_0}\\) is the damping ratio, - \\(A = \\frac{F_0}{m\\omega_0^2}\\) is the normalized forcing amplitude, - \\(\\Omega = \\frac{\\omega}{\\omega_0}\\) is the normalized driving frequency. 3. Effects of Parameters 3.1 Effect of Damping Coefficient ( \\(\\gamma\\) ) When \\(\\gamma\\) is small (underdamped case, \\(\\zeta < 1\\) ), the system exhibits oscillatory behavior with slow decay. When \\(\\gamma\\) is large (overdamped case, \\(\\zeta > 1\\) ), the motion decays without oscillations. The critical damping case ( \\(\\zeta = 1\\) ) represents the boundary between these behaviors. The quality factor \\(Q\\) is related to damping by: \\[Q = \\frac{1}{2\\zeta}\\] which determines the sharpness of resonance. 3.2 Effect of Driving Amplitude ( \\(F_0\\) ) For small \\(F_0\\) , the system remains in a regular periodic state. As \\(F_0\\) increases, the system may exhibit nonlinear effects and enter chaotic regimes. The response amplitude \\(X_{max}\\) follows: \\[X_{max} \\propto \\frac{F_0}{\\sqrt{(k - m\\omega^2)^2 + (\\gamma \\omega)^2}}\\] which shows resonance at \\(\\omega \\approx \\omega_0\\) when damping is small. 3.3 Effect of Driving Frequency ( \\(\\omega\\) ) When \\(\\omega \\approx \\omega_0\\) , resonance occurs, leading to large oscillations. For \\(\\omega \\gg \\omega_0\\) , the response amplitude decreases as: \\[X \\approx \\frac{F_0}{m\\omega^2}\\] indicating that high-frequency driving leads to negligible displacement. 4. Regular vs. Chaotic Motion 4.1 Period Doubling Route to Chaos As \\(F_0\\) or \\(\\omega\\) is increased, the system undergoes a transition from periodic motion to chaos. The route often follows a period-doubling bifurcation sequence: \\[T \\to 2T \\to 4T \\to 8T \\to \\dots\\] where \\(T\\) is the fundamental period. The Lyapunov exponent \\(\\lambda\\) determines chaos: \\[\\lambda = \\lim_{t \\to \\infty} \\frac{1}{t} \\ln \\left| \\frac{dx_t}{dx_0} \\right|\\] If \\(\\lambda > 0\\) , the system is chaotic. 4.2 Physical Interpretation Regular motion corresponds to predictable, periodic behavior, often observed at low \\(F_0\\) . Chaotic motion implies sensitive dependence on initial conditions, leading to an unpredictable long-term trajectory. The transition is crucial in applications like pendulum clocks, electrical circuits, and climate modeling. 5. Conclusion The study of dynamics highlights the impact of system parameters on motion behavior. Understanding these effects is essential in engineering, physics, and applied mathematics for designing stable and predictable systems. 3. Practical Applications Real-World Applications The forced damped pendulum model has numerous real-world applications, particularly in systems where oscillatory motion and damping effects play a crucial role. Some key applications include: Energy Harvesting Suspension Bridges Oscillating Circuits 3.1 Energy Harvesting Energy harvesting systems often utilize forced oscillatory motion to convert mechanical energy into electrical energy. A mathematical model of such a system is: \\[m\\ddot{x} + c\\dot{x} + kx = F_0\\cos(\\omega t)\\] where: - \\(m\\) is the mass, - \\(c\\) is the damping coefficient, - \\(k\\) is the stiffness constant, - \\(F_0\\) is the external force amplitude, - \\(\\omega\\) is the forcing frequency. The resonance condition occurs when \\(\\omega \\approx \\omega_0\\) , where \\(\\omega_0 = \\sqrt{k/m}\\) , leading to maximum energy transfer. 3.2 Suspension Bridges Suspension bridges experience oscillations due to wind forces and pedestrian movements. The forced damped pendulum model describes how damping affects the stability of bridges. The governing equation is: \\[mL^2\\ddot{\\theta} + cL^2\\dot{\\theta} + mgL\\sin\\theta = F\\cos(\\omega t)\\] where: - \\(\\theta\\) is the angular displacement, - \\(L\\) is the length of the bridge cable, - \\(g\\) is gravitational acceleration, - \\(F\\) is the external forcing function. For small oscillations, we approximate \\(\\sin\\theta \\approx \\theta\\) , reducing the equation to a linear damped forced oscillator model. 3.3 Oscillating Circuits RLC circuits exhibit forced damped oscillations where resistance ( \\(R\\) ), inductance ( \\(L\\) ), and capacitance ( \\(C\\) ) determine the system behavior. The differential equation governing an RLC circuit is: \\[L\\ddot{q} + R\\dot{q} + \\frac{1}{C}q = V_0\\cos(\\omega t)\\] where: - \\(q\\) is the charge, - \\(R\\) is the resistance, - \\(L\\) is the inductance, - \\(C\\) is the capacitance, - \\(V_0\\) is the driving voltage. The natural frequency is given by: \\( \\(\\omega_0 = \\frac{1}{\\sqrt{LC}}\\) \\) and the damping ratio is: \\( \\(\\zeta = \\frac{R}{2} \\sqrt{\\frac{C}{L}}.\\) \\) If \\(\\zeta < 1\\) , the system is underdamped and oscillatory; if \\(\\zeta > 1\\) , the system is overdamped. These equations demonstrate how the forced damped pendulum model applies to diverse engineering and physical systems. 4. python/plot ```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp Define the forced damped pendulum equations def forced_damped_pendulum(t, y, q, F, omega): theta, omega_dot = y dtheta_dt = omega_dot domega_dt = -np.sin(theta) - q * omega_dot + F * np.cos(omega * t) return [dtheta_dt, domega_dt] Simulation parameters dt = 0.01 t_max = 100 q = 0.5 # damping coefficient F = 1.2 # driving force omega = 2/3 # driving frequency y0 = [0.2, 0.0] # initial conditions (theta, omega) Solve the ODE t_eval = np.arange(0, t_max, dt) sol = solve_ivp(forced_damped_pendulum, [0, t_max], y0, t_eval=t_eval, args=(q, F, omega)) Plot time series plt.figure(figsize=(10, 4)) plt.plot(sol.t, sol.y[0], label='Theta (angle)') plt.xlabel('Time') plt.ylabel('Theta') plt.legend() plt.title('Forced Damped Pendulum Motion') plt.grid() plt.show() Phase diagram plt.figure(figsize=(6, 6)) plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.xlabel('Theta') plt.ylabel('Angular Velocity') plt.title('Phase Diagram') plt.grid() plt.show() Poincare Section times = np.arange(0, t_max, 2*np.pi/omega) points = solve_ivp(forced_damped_pendulum, [0, t_max], y0, t_eval=times, args=(q, F, omega)) plt.figure(figsize=(6, 6)) plt.scatter(points.y[0], points.y[1], s=5) plt.xlabel('Theta') plt.ylabel('Angular Velocity') plt.title('Poincar\u00e9 Section') plt.grid() plt.show() ``` link{colab}:https://colab.research.google.com/drive/1WSAIR1LMCMNbd5M-bufs92H_jsr8xx2H?usp=sharing","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#11-governing-equation","text":"The motion of a forced damped pendulum is described by the second-order nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin\\theta = F_0 \\cos(\\omega t), \\] where: - \\(\\theta\\) is the angular displacement, - \\(\\gamma\\) is the damping coefficient, - \\(\\omega_0 = \\sqrt{g/L}\\) is the natural frequency of the pendulum, - \\(F_0\\) is the amplitude of the external periodic forcing, - \\(\\omega\\) is the driving frequency, - \\(g\\) is the acceleration due to gravity, - \\(L\\) is the length of the pendulum.","title":"1.1 Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#12-approximate-solutions-for-small-angle-oscillations","text":"For small angles ( \\(\\theta \\approx 0\\) ), we use the small-angle approximation: \\[ \\sin\\theta \\approx \\theta. \\] This simplifies the governing equation to a linear form: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = F_0 \\cos(\\omega t). \\] This is a damped, driven harmonic oscillator equation, which can be solved using standard techniques.","title":"1.2 Approximate Solutions for Small-Angle Oscillations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#homogeneous-solution-natural-response","text":"The homogeneous equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = 0 \\] has a general solution of the form: \\[ \\theta_h (t) = e^{-\\frac{\\gamma}{2}t} \\left( C_1 \\cos(\\Omega t) + C_2 \\sin(\\Omega t) \\right), \\] where: \\[ \\Omega = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{4}} \\] is the damped frequency of oscillation.","title":"Homogeneous Solution (Natural Response)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#particular-solution-steady-state-response","text":"For the forcing term \\(F_0 \\cos(\\omega t)\\) , we assume a solution of the form: \\[ \\theta_p (t) = A \\cos(\\omega t - \\delta). \\] Substituting into the equation and solving for \\(A\\) and \\(\\delta\\) , we obtain: \\[ A = \\frac{F_0}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + \\gamma^2 \\omega^2}}, \\] \\[ \\tan\\delta = \\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2}. \\] Thus, the total solution is: \\[ \\theta (t) = e^{-\\frac{\\gamma}{2}t} \\left( C_1 \\cos(\\Omega t) + C_2 \\sin(\\Omega t) \\right) + A \\cos(\\omega t - \\delta). \\]","title":"Particular Solution (Steady-State Response)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#13-resonance-conditions-and-energy-implications","text":"Resonance occurs when the driving frequency \\(\\omega\\) is close to the natural frequency \\(\\omega_0\\) . In the absence of damping ( \\(\\gamma = 0\\) ), the amplitude becomes: \\[ A = \\frac{F_0}{|\\omega_0^2 - \\omega^2|}. \\] For \\(\\omega \\approx \\omega_0\\) , the amplitude becomes very large, indicating resonance. In the presence of damping, the peak amplitude occurs at a slightly shifted frequency given by: \\[ \\omega_r = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{2}}. \\] The energy of the system is given by: \\[ E = \\frac{1}{2} I \\dot{\\theta}^2 + mgL(1 - \\cos\\theta), \\] where \\(I = mL^2\\) is the moment of inertia. In steady-state oscillations, energy is continuously supplied by the external force to compensate for the energy lost due to damping, resulting in a balance where the average energy remains constant. This section provides the theoretical groundwork necessary to analyze the forced damped pendulum. Further analysis will involve numerical simulations and visualization techniques to explore the full dynamical behavior, including chaos and bifurcations.","title":"1.3 Resonance Conditions and Energy Implications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#analysis-of-dynamics","text":"","title":"Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-introduction","text":"In this section, we analyze the effects of key parameters on the motion of a dynamical system. We focus on the damping coefficient \\(\\gamma\\) , driving amplitude \\(F_0\\) , and driving frequency \\(\\omega\\) . The study involves examining regular and chaotic motion and interpreting their physical significance.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-governing-equations","text":"The general equation of motion for a driven, damped system is given by: \\[m\\ddot{x} + \\gamma \\dot{x} + kx = F_0 \\cos(\\omega t)\\] where: - \\(m\\) is the mass, - \\(\\gamma\\) is the damping coefficient, - \\(k\\) is the stiffness of the system, - \\(F_0\\) is the driving amplitude, - \\(\\omega\\) is the driving frequency. Rewriting in dimensionless form using \\(\\tau = \\omega_0 t\\) (where \\(\\omega_0 = \\sqrt{k/m}\\) is the natural frequency): \\[\\ddot{X} + 2\\zeta \\dot{X} + X = A \\cos(\\Omega \\tau)\\] where: - \\(\\zeta = \\frac{\\gamma}{2m\\omega_0}\\) is the damping ratio, - \\(A = \\frac{F_0}{m\\omega_0^2}\\) is the normalized forcing amplitude, - \\(\\Omega = \\frac{\\omega}{\\omega_0}\\) is the normalized driving frequency.","title":"2. Governing Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-effects-of-parameters","text":"","title":"3. Effects of Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#31-effect-of-damping-coefficient-gamma","text":"When \\(\\gamma\\) is small (underdamped case, \\(\\zeta < 1\\) ), the system exhibits oscillatory behavior with slow decay. When \\(\\gamma\\) is large (overdamped case, \\(\\zeta > 1\\) ), the motion decays without oscillations. The critical damping case ( \\(\\zeta = 1\\) ) represents the boundary between these behaviors. The quality factor \\(Q\\) is related to damping by: \\[Q = \\frac{1}{2\\zeta}\\] which determines the sharpness of resonance.","title":"3.1 Effect of Damping Coefficient (\\(\\gamma\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#32-effect-of-driving-amplitude-f_0","text":"For small \\(F_0\\) , the system remains in a regular periodic state. As \\(F_0\\) increases, the system may exhibit nonlinear effects and enter chaotic regimes. The response amplitude \\(X_{max}\\) follows: \\[X_{max} \\propto \\frac{F_0}{\\sqrt{(k - m\\omega^2)^2 + (\\gamma \\omega)^2}}\\] which shows resonance at \\(\\omega \\approx \\omega_0\\) when damping is small.","title":"3.2 Effect of Driving Amplitude (\\(F_0\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#33-effect-of-driving-frequency-omega","text":"When \\(\\omega \\approx \\omega_0\\) , resonance occurs, leading to large oscillations. For \\(\\omega \\gg \\omega_0\\) , the response amplitude decreases as: \\[X \\approx \\frac{F_0}{m\\omega^2}\\] indicating that high-frequency driving leads to negligible displacement.","title":"3.3 Effect of Driving Frequency (\\(\\omega\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-regular-vs-chaotic-motion","text":"","title":"4. Regular vs. Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#41-period-doubling-route-to-chaos","text":"As \\(F_0\\) or \\(\\omega\\) is increased, the system undergoes a transition from periodic motion to chaos. The route often follows a period-doubling bifurcation sequence: \\[T \\to 2T \\to 4T \\to 8T \\to \\dots\\] where \\(T\\) is the fundamental period. The Lyapunov exponent \\(\\lambda\\) determines chaos: \\[\\lambda = \\lim_{t \\to \\infty} \\frac{1}{t} \\ln \\left| \\frac{dx_t}{dx_0} \\right|\\] If \\(\\lambda > 0\\) , the system is chaotic.","title":"4.1 Period Doubling Route to Chaos"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#42-physical-interpretation","text":"Regular motion corresponds to predictable, periodic behavior, often observed at low \\(F_0\\) . Chaotic motion implies sensitive dependence on initial conditions, leading to an unpredictable long-term trajectory. The transition is crucial in applications like pendulum clocks, electrical circuits, and climate modeling.","title":"4.2 Physical Interpretation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-conclusion","text":"The study of dynamics highlights the impact of system parameters on motion behavior. Understanding these effects is essential in engineering, physics, and applied mathematics for designing stable and predictable systems.","title":"5. Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#real-world-applications","text":"The forced damped pendulum model has numerous real-world applications, particularly in systems where oscillatory motion and damping effects play a crucial role. Some key applications include: Energy Harvesting Suspension Bridges Oscillating Circuits","title":"Real-World Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#31-energy-harvesting","text":"Energy harvesting systems often utilize forced oscillatory motion to convert mechanical energy into electrical energy. A mathematical model of such a system is: \\[m\\ddot{x} + c\\dot{x} + kx = F_0\\cos(\\omega t)\\] where: - \\(m\\) is the mass, - \\(c\\) is the damping coefficient, - \\(k\\) is the stiffness constant, - \\(F_0\\) is the external force amplitude, - \\(\\omega\\) is the forcing frequency. The resonance condition occurs when \\(\\omega \\approx \\omega_0\\) , where \\(\\omega_0 = \\sqrt{k/m}\\) , leading to maximum energy transfer.","title":"3.1 Energy Harvesting"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#32-suspension-bridges","text":"Suspension bridges experience oscillations due to wind forces and pedestrian movements. The forced damped pendulum model describes how damping affects the stability of bridges. The governing equation is: \\[mL^2\\ddot{\\theta} + cL^2\\dot{\\theta} + mgL\\sin\\theta = F\\cos(\\omega t)\\] where: - \\(\\theta\\) is the angular displacement, - \\(L\\) is the length of the bridge cable, - \\(g\\) is gravitational acceleration, - \\(F\\) is the external forcing function. For small oscillations, we approximate \\(\\sin\\theta \\approx \\theta\\) , reducing the equation to a linear damped forced oscillator model.","title":"3.2 Suspension Bridges"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#33-oscillating-circuits","text":"RLC circuits exhibit forced damped oscillations where resistance ( \\(R\\) ), inductance ( \\(L\\) ), and capacitance ( \\(C\\) ) determine the system behavior. The differential equation governing an RLC circuit is: \\[L\\ddot{q} + R\\dot{q} + \\frac{1}{C}q = V_0\\cos(\\omega t)\\] where: - \\(q\\) is the charge, - \\(R\\) is the resistance, - \\(L\\) is the inductance, - \\(C\\) is the capacitance, - \\(V_0\\) is the driving voltage. The natural frequency is given by: \\( \\(\\omega_0 = \\frac{1}{\\sqrt{LC}}\\) \\) and the damping ratio is: \\( \\(\\zeta = \\frac{R}{2} \\sqrt{\\frac{C}{L}}.\\) \\) If \\(\\zeta < 1\\) , the system is underdamped and oscillatory; if \\(\\zeta > 1\\) , the system is overdamped. These equations demonstrate how the forced damped pendulum model applies to diverse engineering and physical systems.","title":"3.3 Oscillating Circuits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-pythonplot","text":"```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp","title":"4. python/plot"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#define-the-forced-damped-pendulum-equations","text":"def forced_damped_pendulum(t, y, q, F, omega): theta, omega_dot = y dtheta_dt = omega_dot domega_dt = -np.sin(theta) - q * omega_dot + F * np.cos(omega * t) return [dtheta_dt, domega_dt]","title":"Define the forced damped pendulum equations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#simulation-parameters","text":"dt = 0.01 t_max = 100 q = 0.5 # damping coefficient F = 1.2 # driving force omega = 2/3 # driving frequency y0 = [0.2, 0.0] # initial conditions (theta, omega)","title":"Simulation parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solve-the-ode","text":"t_eval = np.arange(0, t_max, dt) sol = solve_ivp(forced_damped_pendulum, [0, t_max], y0, t_eval=t_eval, args=(q, F, omega))","title":"Solve the ODE"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#plot-time-series","text":"plt.figure(figsize=(10, 4)) plt.plot(sol.t, sol.y[0], label='Theta (angle)') plt.xlabel('Time') plt.ylabel('Theta') plt.legend() plt.title('Forced Damped Pendulum Motion') plt.grid() plt.show()","title":"Plot time series"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-diagram","text":"plt.figure(figsize=(6, 6)) plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.xlabel('Theta') plt.ylabel('Angular Velocity') plt.title('Phase Diagram') plt.grid() plt.show()","title":"Phase diagram"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#poincare-section","text":"times = np.arange(0, t_max, 2*np.pi/omega) points = solve_ivp(forced_damped_pendulum, [0, t_max], y0, t_eval=times, args=(q, F, omega)) plt.figure(figsize=(6, 6)) plt.scatter(points.y[0], points.y[1], s=5) plt.xlabel('Theta') plt.ylabel('Angular Velocity') plt.title('Poincar\u00e9 Section') plt.grid() plt.show() ``` link{colab}:https://colab.research.google.com/drive/1WSAIR1LMCMNbd5M-bufs92H_jsr8xx2H?usp=sharing","title":"Poincare Section"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Orbital Period and Orbital Radius Theoretical Foundation Kepler's Third Law states that the square of a planet's orbital period is proportional to the cube of its orbital radius. This law can be derived using Newton's laws of motion and universal gravitation. Derivation of Keplers Third Law For a planet orbiting a star in a circular orbit, the gravitational force provides the necessary centripetal force: \\[\\frac{GMm}{r^2}=m\\frac{v^2}{r}\\] where: - \\(G\\) is the gravitational constant, - \\(M\\) is the mass of the central star, - \\(m\\) is the mass of the orbiting body, - \\(r\\) is the orbital radius, - \\(v\\) is the orbital velocity. Since the orbital period \\(T\\) is related to velocity by: \\[v=\\frac{2\\pi r}{T}\\] Substituting this into the centripetal force equation: \\[\\frac{GM}{r^2}=\\frac{(2\\pi r)^2}{T^2r}\\] Rearranging: \\[T^2=\\frac{4\\pi^2}{GM}r^3\\] which confirms Kepler\u2019s Third Law: \\[T^2\\propto r^3\\] Implications in Astronomy This relationship allows for the determination of planetary masses and distances. It is essential for calculating satellite orbits. It applies to a wide range of celestial systems, from planets to exoplanets and binary stars. Real-World Examples The Moon\u2019s orbit around Earth : Using Kepler\u2019s Law, one can verify its orbital period. Planets in the Solar System : The law holds for all planets orbiting the Sun. Artificial Satellites : Engineers use this law to design satellite trajectories. Implementation Develop a computational model to simulate circular orbits. Verify Kepler\u2019s Third Law numerically by computing \\(T^2\\) and \\(r^3\\) . Visualize orbits with plots of motion over time. Deliverables A Markdown document with Python code for simulations. Graphical representations of orbital paths. Verification of Kepler\u2019s Third Law through numerical analysis. Discussion on extensions to elliptical orbits. This study provides a rigorous yet accessible approach to understanding orbital mechanics and celestial dynamics.","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius","text":"","title":"Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#theoretical-foundation","text":"Kepler's Third Law states that the square of a planet's orbital period is proportional to the cube of its orbital radius. This law can be derived using Newton's laws of motion and universal gravitation.","title":"Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#derivation-of-keplers-third-law","text":"For a planet orbiting a star in a circular orbit, the gravitational force provides the necessary centripetal force: \\[\\frac{GMm}{r^2}=m\\frac{v^2}{r}\\] where: - \\(G\\) is the gravitational constant, - \\(M\\) is the mass of the central star, - \\(m\\) is the mass of the orbiting body, - \\(r\\) is the orbital radius, - \\(v\\) is the orbital velocity. Since the orbital period \\(T\\) is related to velocity by: \\[v=\\frac{2\\pi r}{T}\\] Substituting this into the centripetal force equation: \\[\\frac{GM}{r^2}=\\frac{(2\\pi r)^2}{T^2r}\\] Rearranging: \\[T^2=\\frac{4\\pi^2}{GM}r^3\\] which confirms Kepler\u2019s Third Law: \\[T^2\\propto r^3\\]","title":"Derivation of Keplers Third Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#implications-in-astronomy","text":"This relationship allows for the determination of planetary masses and distances. It is essential for calculating satellite orbits. It applies to a wide range of celestial systems, from planets to exoplanets and binary stars.","title":"Implications in Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#real-world-examples","text":"The Moon\u2019s orbit around Earth : Using Kepler\u2019s Law, one can verify its orbital period. Planets in the Solar System : The law holds for all planets orbiting the Sun. Artificial Satellites : Engineers use this law to design satellite trajectories.","title":"Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#implementation","text":"Develop a computational model to simulate circular orbits. Verify Kepler\u2019s Third Law numerically by computing \\(T^2\\) and \\(r^3\\) . Visualize orbits with plots of motion over time.","title":"Implementation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#deliverables","text":"A Markdown document with Python code for simulations. Graphical representations of orbital paths. Verification of Kepler\u2019s Third Law through numerical analysis. Discussion on extensions to elliptical orbits. This study provides a rigorous yet accessible approach to understanding orbital mechanics and celestial dynamics.","title":"Deliverables"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}